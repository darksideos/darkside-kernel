#!/usr/bin/env python3

def verb(msg):
	global args
	if args.verbose:
		print(msg)

from os import system
from math import ceil
import argparse

parser = argparse.ArgumentParser(prog='dsosimage', description='Create a GRUB disk image.')
parser.add_argument('file', metavar='file', help='the file to write the disk image to')
parser.add_argument('size', metavar='megs', type=int, help='size of file (in MB)')
parser.add_argument('format', metavar='format', help='format (only fat32)')
parser.add_argument('mountpoint', metavar='mountpoint', help='a mountpoint for the script work with (something like /mnt/hdd)')
parser.add_argument('-v', '--verbose', action='store_true', help='verbose mode')
parser.add_argument('-l', '--label', help='label of the partition')

args = parser.parse_args()

if args.format == 'fat32':
	id = 'c'

cylinders = ceil(args.size*1000*1024/516960.0)

system('dd if=/dev/zero of=' + args.file + ' bs=516096c count=' + str(cylinders) + ' 1>/dev/null 2>/dev/null')
verb('Created disk image.')

system("""cat <<EOF | fdisk -u -C$CYL -S63 -H16 """ + args.file + """ -c=dos 1>/dev/null 2>/dev/null
o
n




a
1
t
""" + id + """
w
EOF
""")
verb('Created partition.')

system('losetup -o32256 /dev/loop0 ' + args.file)
verb('Setup loopback device.')

if args.format == 'fat32':
	system('mkdosfs -F32 /dev/loop0 1>/dev/null 2>/dev/null')
	verb('FAT32 formatted the partition.')

if args.label:
	system('sudo mlabel -i /dev/loop0 ::' + args.label)
	verb('Renamed the partition.')

system('mount -t vfat /dev/loop0 ' + args.mountpoint)
verb('Mounted loopback device.')

system('mkdir ' + args.mountpoint + '/boot')
system('mkdir ' + args.mountpoint + '/boot/grub')
system('wget -P /tmp ftp://alpha.gnu.org/gnu/grub/grub-0.97-i386-pc.tar.gz 1>/dev/null 2>/dev/null')
system('tar -zxvf /tmp/grub-0.97-i386-pc.tar.gz -C /tmp 1>/dev/null 2>/dev/null')
system('cp /tmp/grub-0.97-i386-pc/boot/grub/* ' + args.mountpoint + '/boot/grub')
system('rm /tmp/grub-0.97-i386-pc.tar.gz')
system('rm -rf /tmp/grub-0.97-i386-pc')
verb('Created directory structure, copied core GRUB files.')

system('umount /dev/loop0')
verb('Unmounted loopback device.')

system('losetup -d /dev/loop0')
verb('Removed loopback device.')

system("""cat <<EOF | grub --device-map=/dev/null 1>/dev/null 2>/dev/null
device (hd0) """ + args.mountpoint + """
root (hd0,0)
setup (hd0)
quit
EOF
""")
verb('Installed grub on the image.')
